# utils.VidigiPriorityStore { #vidigi.utils.VidigiPriorityStore }

```python
utils.VidigiPriorityStore(self, env, capacity=float('inf'), init_items=None)
```

An optimized SimPy priority store that eliminates delays between resource
release and acquisition by directly triggering waiting events.

This implementation provides the same API as the original VidigiPriorityStore
but with immediate resource handoff between processes.

AI USE DISCLOSURE: This code was generated by Claude 3.7 Sonnet. It has been evaluated
and tested by a human.

## Methods

| Name | Description |
| --- | --- |
| [get](#vidigi.utils.VidigiPriorityStore.get) | Create an event to get an item from the store. |
| [get_direct](#vidigi.utils.VidigiPriorityStore.get_direct) | Get an item from the store without the context manager. |
| [put](#vidigi.utils.VidigiPriorityStore.put) | Put an item into the store. |
| [request](#vidigi.utils.VidigiPriorityStore.request) | Request context manager for getting an item from the store. |
| [request_direct](#vidigi.utils.VidigiPriorityStore.request_direct) | Alias for get_direct() to maintain consistent API. |
| [return_item](#vidigi.utils.VidigiPriorityStore.return_item) | Return an item to the store and immediately process any waiting get requests. |

### get { #vidigi.utils.VidigiPriorityStore.get }

```python
utils.VidigiPriorityStore.get(priority=0)
```

Create an event to get an item from the store.

Args:
    priority: Lower values indicate higher priority (default: 0)

Returns:
    A get event that can be yielded

### get_direct { #vidigi.utils.VidigiPriorityStore.get_direct }

```python
utils.VidigiPriorityStore.get_direct(priority=0)
```

Get an item from the store without the context manager.
Use this if you don't want to automatically return the item.

Returns:
    A get event that can be yielded

### put { #vidigi.utils.VidigiPriorityStore.put }

```python
utils.VidigiPriorityStore.put(item)
```

Put an item into the store.

Args:
    item: The item to put in the store

Returns:
    A put event that can be yielded

### request { #vidigi.utils.VidigiPriorityStore.request }

```python
utils.VidigiPriorityStore.request(priority=0)
```

Request context manager for getting an item from the store.
The item is automatically returned when exiting the context.

Args:
    priority: Lower values indicate higher priority (default: 0)

Returns:
    A context manager that yields the get event and handles item return

### request_direct { #vidigi.utils.VidigiPriorityStore.request_direct }

```python
utils.VidigiPriorityStore.request_direct(priority=0)
```

Alias for get_direct() to maintain consistent API.

Returns:
    A get event that can be yielded

### return_item { #vidigi.utils.VidigiPriorityStore.return_item }

```python
utils.VidigiPriorityStore.return_item(item)
```

Return an item to the store and immediately process any waiting get requests.

This is the key to eliminating delays - it directly triggers waiting get
requests without going through the normal put/get mechanism.

Args:
    item: The item to return to the store